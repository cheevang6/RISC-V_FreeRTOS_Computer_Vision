//
// Written by Synplify Pro 
// Product Version "O-2018.09M-SP1-1"
// Program "Synplify Pro", Mapper "mapact2018q4p1, Build 026R"
// Wed Feb 17 22:06:29 2021
//
// Source file index table:
// Object locations will have the form <file>:<line>
// file 0 "\c:\microsemi\libero_soc_v12.3\synplifypro\lib\generic\igloo2.v "
// file 1 "\c:\microsemi\libero_soc_v12.3\synplifypro\lib\vlog\hypermods.v "
// file 2 "\c:\microsemi\libero_soc_v12.3\synplifypro\lib\vlog\umr_capim.v "
// file 3 "\c:\microsemi\libero_soc_v12.3\synplifypro\lib\vlog\scemi_objects.v "
// file 4 "\c:\microsemi\libero_soc_v12.3\synplifypro\lib\vlog\scemi_pipes.svh "
// file 5 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\component\work\fccc_c0\fccc_c0_0\fccc_c0_fccc_c0_0_fccc.v "
// file 6 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\component\work\fccc_c0\fccc_c0.v "
// file 7 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\component\actel\sgcore\osc\2.0.101\osc_comps.v "
// file 8 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\component\work\osc_c0\osc_c0_0\osc_c0_osc_c0_0_osc.v "
// file 9 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\component\work\osc_c0\osc_c0.v "
// file 10 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\hdl\coresccb.v "
// file 11 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\hdl\clock_divider.v "
// file 12 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\hdl\config_sccb.v "
// file 13 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\component\work\sccb_design\sccb_design.v "
// file 14 "\c:\microsemi\libero_soc_v12.3\synplifypro\lib\nlconst.dat "
// file 15 "\c:\users\cheec\desktop\master\risc-v_freertos_computer_vision\sccb_testing\sccb_fpga_design\sccb_fpga_design\designer\sccb_design\synthesis.fdc "

`timescale 100 ps/100 ps
module FCCC_C0_FCCC_C0_0_FCCC (
  OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC,
  xclk_c
)
;
input OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC ;
output xclk_c ;
wire OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC ;
wire xclk_c ;
wire [7:0] PRDATA;
wire GL0_net ;
wire Y0 ;
wire Y1 ;
wire Y2 ;
wire Y3 ;
wire LOCK ;
wire BUSY ;
wire VCC ;
wire GND ;
wire GL1 ;
wire GL2 ;
wire GL3 ;
// @5:18
  CLKINT GL0_INST (
	.Y(xclk_c),
	.A(GL0_net)
);
// @5:20
  CCC CCC_INST (
	.Y0(Y0),
	.Y1(Y1),
	.Y2(Y2),
	.Y3(Y3),
	.PRDATA(PRDATA[7:0]),
	.LOCK(LOCK),
	.BUSY(BUSY),
	.CLK0(VCC),
	.CLK1(VCC),
	.CLK2(VCC),
	.CLK3(VCC),
	.NGMUX0_SEL(GND),
	.NGMUX1_SEL(GND),
	.NGMUX2_SEL(GND),
	.NGMUX3_SEL(GND),
	.NGMUX0_HOLD_N(VCC),
	.NGMUX1_HOLD_N(VCC),
	.NGMUX2_HOLD_N(VCC),
	.NGMUX3_HOLD_N(VCC),
	.NGMUX0_ARST_N(VCC),
	.NGMUX1_ARST_N(VCC),
	.NGMUX2_ARST_N(VCC),
	.NGMUX3_ARST_N(VCC),
	.PLL_BYPASS_N(VCC),
	.PLL_ARST_N(VCC),
	.PLL_POWERDOWN_N(VCC),
	.GPD0_ARST_N(VCC),
	.GPD1_ARST_N(VCC),
	.GPD2_ARST_N(VCC),
	.GPD3_ARST_N(VCC),
	.PRESET_N(GND),
	.PCLK(VCC),
	.PSEL(VCC),
	.PENABLE(VCC),
	.PWRITE(VCC),
	.PADDR({VCC, VCC, VCC, VCC, VCC, VCC}),
	.PWDATA({VCC, VCC, VCC, VCC, VCC, VCC, VCC, VCC}),
	.CLK0_PAD(GND),
	.CLK1_PAD(GND),
	.CLK2_PAD(GND),
	.CLK3_PAD(GND),
	.GL0(GL0_net),
	.GL1(GL1),
	.GL2(GL2),
	.GL3(GL3),
	.RCOSC_25_50MHZ(OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC),
	.RCOSC_1MHZ(GND),
	.XTLOSC(GND)
);
defparam CCC_INST.INIT=210'h0000007FA8000045574000718C6318C2318C1DEC0404040800104;
defparam CCC_INST.VCOFREQUENCY=640.0;
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* FCCC_C0_FCCC_C0_0_FCCC */

module FCCC_C0 (
  xclk_c,
  OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC
)
;
output xclk_c ;
input OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC ;
wire xclk_c ;
wire OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC ;
wire GND ;
wire VCC ;
// @6:57
  FCCC_C0_FCCC_C0_0_FCCC FCCC_C0_0 (
	.OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC(OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC),
	.xclk_c(xclk_c)
);
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* FCCC_C0 */

module OSC_C0_OSC_C0_0_OSC (
  OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC
)
;
output OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC ;
wire OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC ;
wire GND ;
wire VCC ;
// @8:23
  RCOSC_25_50MHZ I_RCOSC_25_50MHZ (
	.CLKOUT(OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC)
);
defparam I_RCOSC_25_50MHZ.FREQUENCY=50.0;
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* OSC_C0_OSC_C0_0_OSC */

module OSC_C0 (
  OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC
)
;
output OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC ;
wire OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC ;
wire GND ;
wire VCC ;
// @9:40
  OSC_C0_OSC_C0_0_OSC OSC_C0_0 (
	.OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC(OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC)
);
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* OSC_C0 */

module sccb_design (
  DEVRST_N,
  cam_pwdn,
  cam_rstn,
  sioc,
  xclk,
  siod
)
;
input DEVRST_N ;
output cam_pwdn ;
output cam_rstn ;
output sioc ;
output xclk ;
output siod ;
wire DEVRST_N ;
wire cam_pwdn ;
wire cam_rstn ;
wire sioc ;
wire xclk ;
wire siod ;
wire OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC ;
wire VCC ;
wire GND ;
wire xclk_c ;
// @13:28
  TRIBUFF cam_pwdn_obuft (
	.PAD(cam_pwdn),
	.D(GND),
	.E(GND)
);
// @13:29
  OUTBUF cam_rstn_obuf (
	.PAD(cam_rstn),
	.D(VCC)
);
// @13:30
  OUTBUF sioc_obuf (
	.PAD(sioc),
	.D(VCC)
);
// @13:31
  OUTBUF xclk_obuf (
	.PAD(xclk),
	.D(xclk_c)
);
// @13:35
  TRIBUFF siod_obuft (
	.PAD(siod),
	.D(GND),
	.E(GND)
);
// @13:92
  FCCC_C0 FCCC_C0_0 (
	.xclk_c(xclk_c),
	.OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC(OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC)
);
// @13:101
  OSC_C0 OSC_C0_0 (
	.OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC(OSC_C0_0_RCOSC_25_50MHZ_CCC_OUT_RCOSC_25_50MHZ_CCC)
);
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* sccb_design */

